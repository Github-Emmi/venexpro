# Generated by Django 5.2.7 on 2025-10-16 11:45

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=55, unique=True, verbose_name='country name')),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('current_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('price_change_24h', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('price_change_percentage_24h', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('market_cap', models.DecimalField(decimal_places=2, default=0.0, max_digits=30)),
                ('volume_24h', models.DecimalField(decimal_places=2, default=0.0, max_digits=30)),
                ('circulating_supply', models.DecimalField(decimal_places=2, default=0.0, max_digits=30)),
                ('total_supply', models.DecimalField(decimal_places=2, default=0.0, max_digits=30)),
                ('max_supply', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('rank', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Cryptocurrencies',
                'db_table': 'cryptocurrencies',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('btc_wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='BTC Wallet Address')),
                ('ethereum_wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ethereum Wallet Address')),
                ('usdt_wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='USDT Wallet Address')),
                ('litecoin_wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Litecoin Wallet Address')),
                ('tron_wallet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tron Wallet Address')),
                ('currency_type', models.CharField(choices=[('USD', 'America United States Dollars – USD'), ('AFN', 'Afghanistan Afghanis – AFN'), ('ALL', 'Albania Leke – ALL'), ('DZD', 'Algeria Dinars – DZD'), ('ARS', 'Argentina Pesos – ARS'), ('AUD', 'Australia Dollars – AUD'), ('ATS', 'Austria Schillings – ATS'), ('BSD', 'Bahamas Dollars – BSD'), ('BHD', 'Bahrain Dinars – BHD'), ('BDT', 'Bangladesh Taka – BDT'), ('BBD', 'Barbados Dollars – BBD'), ('BEF', 'Belgium Francs – BEF'), ('BMD', 'Bermuda Dollars – BMD'), ('BRL', 'Brazil Reais – BRL'), ('BGN', 'Bulgaria Leva – BGN'), ('CAD', 'Canada Dollars – CAD'), ('XOF', 'CFA BCEAO Francs – XOF'), ('XAF', 'CFA BEAC Francs – XAF'), ('CLP', 'Chile Pesos – CLP'), ('CNY', 'China Yuan Renminbi – CNY'), ('CNY', 'RMB (China Yuan Renminbi), – CNY'), ('COP', 'Colombia Pesos – COP'), ('XPF', 'CFP Francs – XPF'), ('CRC', 'Costa Rica Colones – CRC'), ('HRK', 'Croatia Kuna – HRK'), ('CYP', 'Cyprus Pounds – CYP'), ('CZK', 'Czech Republic Koruny – CZK'), ('DKK', 'Denmark Kroner – DKK'), ('DEM', 'Deutsche (Germany), Marks – DEM'), ('DOP', 'Dominican Republic Pesos – DOP'), ('NLG', 'Dutch (Netherlands), Guilders – NLG'), ('XCD', 'Eastern Caribbean Dollars – XCD'), ('EGP', 'Egypt Pounds – EGP'), ('EEK', 'Estonia Krooni – EEK'), ('EUR', 'Euro – EUR'), ('FJD', 'Fiji Dollars – FJD'), ('FIM', 'Finland Markkaa – FIM'), ('FRF', 'France Francs – FRF'), ('DEM', 'Germany Deutsche Marks – DEM'), ('XAU', 'Gold Ounces – XAU'), ('GRD', 'Greece Drachmae – GRD'), ('GTQ', 'Guatemalan Quetzal – GTQ'), ('NLG', 'Holland (Netherlands), Guilders – NLG'), ('HKD', 'Hong Kong Dollars – HKD'), ('HUF', 'Hungary Forint – HUF'), ('ISK', 'Iceland Kronur – ISK'), ('XDR', 'IMF Special Drawing Right – XDR'), ('INR', 'India Rupees – INR'), ('IDR', 'Indonesia Rupiahs – IDR'), ('IRR', 'Iran Rials – IRR'), ('IQD', 'Iraq Dinars – IQD'), ('IEP', 'Ireland Pounds – IEP'), ('ILS', 'Israel New Shekels – ILS'), ('ITL', 'Italy Lire – ITL'), ('JMD', 'Jamaica Dollars – JMD'), ('JPY', 'Japan Yen – JPY'), ('JOD', 'Jordan Dinars – JOD'), ('KES', 'Kenya Shillings – KES'), ('KRW', 'Korea (South), Won – KRW'), ('KWD', 'Kuwait Dinars – KWD'), ('LBP', 'Lebanon Pounds – LBP'), ('LUF', 'Luxembourg Francs – LUF'), ('MYR', 'Malaysia Ringgits – MYR'), ('MTL', 'Malta Liri – MTL'), ('MUR', 'Mauritius Rupees – MUR'), ('MXN', 'Mexico Pesos – MXN'), ('MAD', 'Morocco Dirhams – MAD'), ('NLG', 'Netherlands Guilders – NLG'), ('NZD', 'New Zealand Dollars – NZD'), ('NGN', 'Nigeria Naira – NGN'), ('NOK', 'Norway Kroner – NOK'), ('OMR', 'Oman Rials – OMR'), ('PKR', 'Pakistan Rupees – PKR'), ('XPD', 'Palladium Ounces – XPD'), ('PEN', 'Peru Nuevos Soles – PEN'), ('PHP', 'Philippines Pesos – PHP'), ('XPT', 'Platinum Ounces – XPT'), ('PLN', 'Poland Zlotych – PLN'), ('PTE', 'Portugal Escudos – PTE'), ('QAR', 'Qatar Riyals – QAR'), ('RON', 'Romania New Lei – RON'), ('ROL', 'Romania Lei – ROL'), ('RUB', 'Russia Rubles – RUB'), ('SAR', 'Saudi Arabia Riyals – SAR'), ('XAG', 'Silver Ounces – XAG'), ('SGD', 'Singapore Dollars – SGD'), ('SKK', 'Slovakia Koruny – SKK'), ('SIT', 'Slovenia Tolars – SIT'), ('ZAR', 'South Africa Rand – ZAR'), ('KRW', 'South Korea Won – KRW'), ('ESP', 'Spain Pesetas – ESP'), ('SDD', 'Sudan Dinars – SDD'), ('SEK', 'Sweden Kronor – SEK'), ('CHF', 'Switzerland Francs – CHF'), ('TWD', 'Taiwan New Dollars – TWD'), ('THB', 'Thailand Baht – THB'), ('TTD', 'Trinidad and Tobago Dollars – TTD'), ('TND', 'Tunisia Dinars – TND'), ('TRY', 'Turkey New Lira – TRY'), ('AED', 'United Arab Emirates Dirhams – AED'), ('GBP', 'United Kingdom Pounds – GBP'), ('USD', 'United States Dollars – USD'), ('VEB', 'Venezuela Bolivares – VEB'), ('VND', 'Vietnam Dong – VND'), ('ZMK', 'Zambia Kwacha – ZMK')], default='USD', max_length=97)),
                ('btc_balance', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('ethereum_balance', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('usdt_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('litecoin_balance', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('tron_balance', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('phone_no', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('id_document', models.FileField(blank=True, null=True, upload_to='kyc_documents/')),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='venex_app.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'custom_users',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_type', models.CharField(choices=[('MARKET', 'Market Order'), ('LIMIT', 'Limit Order'), ('STOP_LOSS', 'Stop Loss'), ('TAKE_PROFIT', 'Take Profit')], max_length=20)),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(1e-08)])),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('stop_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('filled_quantity', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('average_filled_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('FILLED', 'Filled'), ('CANCELLED', 'Cancelled'), ('PARTIALLY_FILLED', 'Partially Filled'), ('EXPIRED', 'Expired')], default='OPEN', max_length=20)),
                ('time_in_force', models.CharField(choices=[('GTC', 'Good Till Cancelled'), ('IOC', 'Immediate or Cancel'), ('FOK', 'Fill or Kill')], default='GTC', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('filled_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=30)),
                ('market_cap', models.DecimalField(decimal_places=2, default=0.0, max_digits=30)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='venex_app.cryptocurrency')),
            ],
            options={
                'db_table': 'price_history',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=55, verbose_name='state name')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venex_app.country')),
            ],
            options={
                'verbose_name_plural': 'States',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='venex_app.state', verbose_name='State/Province'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal')], max_length=20)),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10)),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('fiat_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(choices=[('USD', 'America United States Dollars – USD'), ('AFN', 'Afghanistan Afghanis – AFN'), ('ALL', 'Albania Leke – ALL'), ('DZD', 'Algeria Dinars – DZD'), ('ARS', 'Argentina Pesos – ARS'), ('AUD', 'Australia Dollars – AUD'), ('ATS', 'Austria Schillings – ATS'), ('BSD', 'Bahamas Dollars – BSD'), ('BHD', 'Bahrain Dinars – BHD'), ('BDT', 'Bangladesh Taka – BDT'), ('BBD', 'Barbados Dollars – BBD'), ('BEF', 'Belgium Francs – BEF'), ('BMD', 'Bermuda Dollars – BMD'), ('BRL', 'Brazil Reais – BRL'), ('BGN', 'Bulgaria Leva – BGN'), ('CAD', 'Canada Dollars – CAD'), ('XOF', 'CFA BCEAO Francs – XOF'), ('XAF', 'CFA BEAC Francs – XAF'), ('CLP', 'Chile Pesos – CLP'), ('CNY', 'China Yuan Renminbi – CNY'), ('CNY', 'RMB (China Yuan Renminbi), – CNY'), ('COP', 'Colombia Pesos – COP'), ('XPF', 'CFP Francs – XPF'), ('CRC', 'Costa Rica Colones – CRC'), ('HRK', 'Croatia Kuna – HRK'), ('CYP', 'Cyprus Pounds – CYP'), ('CZK', 'Czech Republic Koruny – CZK'), ('DKK', 'Denmark Kroner – DKK'), ('DEM', 'Deutsche (Germany), Marks – DEM'), ('DOP', 'Dominican Republic Pesos – DOP'), ('NLG', 'Dutch (Netherlands), Guilders – NLG'), ('XCD', 'Eastern Caribbean Dollars – XCD'), ('EGP', 'Egypt Pounds – EGP'), ('EEK', 'Estonia Krooni – EEK'), ('EUR', 'Euro – EUR'), ('FJD', 'Fiji Dollars – FJD'), ('FIM', 'Finland Markkaa – FIM'), ('FRF', 'France Francs – FRF'), ('DEM', 'Germany Deutsche Marks – DEM'), ('XAU', 'Gold Ounces – XAU'), ('GRD', 'Greece Drachmae – GRD'), ('GTQ', 'Guatemalan Quetzal – GTQ'), ('NLG', 'Holland (Netherlands), Guilders – NLG'), ('HKD', 'Hong Kong Dollars – HKD'), ('HUF', 'Hungary Forint – HUF'), ('ISK', 'Iceland Kronur – ISK'), ('XDR', 'IMF Special Drawing Right – XDR'), ('INR', 'India Rupees – INR'), ('IDR', 'Indonesia Rupiahs – IDR'), ('IRR', 'Iran Rials – IRR'), ('IQD', 'Iraq Dinars – IQD'), ('IEP', 'Ireland Pounds – IEP'), ('ILS', 'Israel New Shekels – ILS'), ('ITL', 'Italy Lire – ITL'), ('JMD', 'Jamaica Dollars – JMD'), ('JPY', 'Japan Yen – JPY'), ('JOD', 'Jordan Dinars – JOD'), ('KES', 'Kenya Shillings – KES'), ('KRW', 'Korea (South), Won – KRW'), ('KWD', 'Kuwait Dinars – KWD'), ('LBP', 'Lebanon Pounds – LBP'), ('LUF', 'Luxembourg Francs – LUF'), ('MYR', 'Malaysia Ringgits – MYR'), ('MTL', 'Malta Liri – MTL'), ('MUR', 'Mauritius Rupees – MUR'), ('MXN', 'Mexico Pesos – MXN'), ('MAD', 'Morocco Dirhams – MAD'), ('NLG', 'Netherlands Guilders – NLG'), ('NZD', 'New Zealand Dollars – NZD'), ('NGN', 'Nigeria Naira – NGN'), ('NOK', 'Norway Kroner – NOK'), ('OMR', 'Oman Rials – OMR'), ('PKR', 'Pakistan Rupees – PKR'), ('XPD', 'Palladium Ounces – XPD'), ('PEN', 'Peru Nuevos Soles – PEN'), ('PHP', 'Philippines Pesos – PHP'), ('XPT', 'Platinum Ounces – XPT'), ('PLN', 'Poland Zlotych – PLN'), ('PTE', 'Portugal Escudos – PTE'), ('QAR', 'Qatar Riyals – QAR'), ('RON', 'Romania New Lei – RON'), ('ROL', 'Romania Lei – ROL'), ('RUB', 'Russia Rubles – RUB'), ('SAR', 'Saudi Arabia Riyals – SAR'), ('XAG', 'Silver Ounces – XAG'), ('SGD', 'Singapore Dollars – SGD'), ('SKK', 'Slovakia Koruny – SKK'), ('SIT', 'Slovenia Tolars – SIT'), ('ZAR', 'South Africa Rand – ZAR'), ('KRW', 'South Korea Won – KRW'), ('ESP', 'Spain Pesetas – ESP'), ('SDD', 'Sudan Dinars – SDD'), ('SEK', 'Sweden Kronor – SEK'), ('CHF', 'Switzerland Francs – CHF'), ('TWD', 'Taiwan New Dollars – TWD'), ('THB', 'Thailand Baht – THB'), ('TTD', 'Trinidad and Tobago Dollars – TTD'), ('TND', 'Tunisia Dinars – TND'), ('TRY', 'Turkey New Lira – TRY'), ('AED', 'United Arab Emirates Dirhams – AED'), ('GBP', 'United Kingdom Pounds – GBP'), ('USD', 'United States Dollars – USD'), ('VEB', 'Venezuela Bolivares – VEB'), ('VND', 'Vietnam Dong – VND'), ('ZMK', 'Zambia Kwacha – ZMK')], max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=255, null=True)),
                ('network_fee', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('platform_fee', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('DEPOSIT', 'Deposit'), ('WITHDRAW', 'Withdraw'), ('TRADE', 'Trade'), ('PROFILE_UPDATE', 'Profile Update'), ('KYC_VERIFICATION', 'KYC Verification')], max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'user_activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10)),
                ('Currency_type', models.CharField(choices=[('USD', 'America United States Dollars – USD'), ('AFN', 'Afghanistan Afghanis – AFN'), ('ALL', 'Albania Leke – ALL'), ('DZD', 'Algeria Dinars – DZD'), ('ARS', 'Argentina Pesos – ARS'), ('AUD', 'Australia Dollars – AUD'), ('ATS', 'Austria Schillings – ATS'), ('BSD', 'Bahamas Dollars – BSD'), ('BHD', 'Bahrain Dinars – BHD'), ('BDT', 'Bangladesh Taka – BDT'), ('BBD', 'Barbados Dollars – BBD'), ('BEF', 'Belgium Francs – BEF'), ('BMD', 'Bermuda Dollars – BMD'), ('BRL', 'Brazil Reais – BRL'), ('BGN', 'Bulgaria Leva – BGN'), ('CAD', 'Canada Dollars – CAD'), ('XOF', 'CFA BCEAO Francs – XOF'), ('XAF', 'CFA BEAC Francs – XAF'), ('CLP', 'Chile Pesos – CLP'), ('CNY', 'China Yuan Renminbi – CNY'), ('CNY', 'RMB (China Yuan Renminbi), – CNY'), ('COP', 'Colombia Pesos – COP'), ('XPF', 'CFP Francs – XPF'), ('CRC', 'Costa Rica Colones – CRC'), ('HRK', 'Croatia Kuna – HRK'), ('CYP', 'Cyprus Pounds – CYP'), ('CZK', 'Czech Republic Koruny – CZK'), ('DKK', 'Denmark Kroner – DKK'), ('DEM', 'Deutsche (Germany), Marks – DEM'), ('DOP', 'Dominican Republic Pesos – DOP'), ('NLG', 'Dutch (Netherlands), Guilders – NLG'), ('XCD', 'Eastern Caribbean Dollars – XCD'), ('EGP', 'Egypt Pounds – EGP'), ('EEK', 'Estonia Krooni – EEK'), ('EUR', 'Euro – EUR'), ('FJD', 'Fiji Dollars – FJD'), ('FIM', 'Finland Markkaa – FIM'), ('FRF', 'France Francs – FRF'), ('DEM', 'Germany Deutsche Marks – DEM'), ('XAU', 'Gold Ounces – XAU'), ('GRD', 'Greece Drachmae – GRD'), ('GTQ', 'Guatemalan Quetzal – GTQ'), ('NLG', 'Holland (Netherlands), Guilders – NLG'), ('HKD', 'Hong Kong Dollars – HKD'), ('HUF', 'Hungary Forint – HUF'), ('ISK', 'Iceland Kronur – ISK'), ('XDR', 'IMF Special Drawing Right – XDR'), ('INR', 'India Rupees – INR'), ('IDR', 'Indonesia Rupiahs – IDR'), ('IRR', 'Iran Rials – IRR'), ('IQD', 'Iraq Dinars – IQD'), ('IEP', 'Ireland Pounds – IEP'), ('ILS', 'Israel New Shekels – ILS'), ('ITL', 'Italy Lire – ITL'), ('JMD', 'Jamaica Dollars – JMD'), ('JPY', 'Japan Yen – JPY'), ('JOD', 'Jordan Dinars – JOD'), ('KES', 'Kenya Shillings – KES'), ('KRW', 'Korea (South), Won – KRW'), ('KWD', 'Kuwait Dinars – KWD'), ('LBP', 'Lebanon Pounds – LBP'), ('LUF', 'Luxembourg Francs – LUF'), ('MYR', 'Malaysia Ringgits – MYR'), ('MTL', 'Malta Liri – MTL'), ('MUR', 'Mauritius Rupees – MUR'), ('MXN', 'Mexico Pesos – MXN'), ('MAD', 'Morocco Dirhams – MAD'), ('NLG', 'Netherlands Guilders – NLG'), ('NZD', 'New Zealand Dollars – NZD'), ('NGN', 'Nigeria Naira – NGN'), ('NOK', 'Norway Kroner – NOK'), ('OMR', 'Oman Rials – OMR'), ('PKR', 'Pakistan Rupees – PKR'), ('XPD', 'Palladium Ounces – XPD'), ('PEN', 'Peru Nuevos Soles – PEN'), ('PHP', 'Philippines Pesos – PHP'), ('XPT', 'Platinum Ounces – XPT'), ('PLN', 'Poland Zlotych – PLN'), ('PTE', 'Portugal Escudos – PTE'), ('QAR', 'Qatar Riyals – QAR'), ('RON', 'Romania New Lei – RON'), ('ROL', 'Romania Lei – ROL'), ('RUB', 'Russia Rubles – RUB'), ('SAR', 'Saudi Arabia Riyals – SAR'), ('XAG', 'Silver Ounces – XAG'), ('SGD', 'Singapore Dollars – SGD'), ('SKK', 'Slovakia Koruny – SKK'), ('SIT', 'Slovenia Tolars – SIT'), ('ZAR', 'South Africa Rand – ZAR'), ('KRW', 'South Korea Won – KRW'), ('ESP', 'Spain Pesetas – ESP'), ('SDD', 'Sudan Dinars – SDD'), ('SEK', 'Sweden Kronor – SEK'), ('CHF', 'Switzerland Francs – CHF'), ('TWD', 'Taiwan New Dollars – TWD'), ('THB', 'Thailand Baht – THB'), ('TTD', 'Trinidad and Tobago Dollars – TTD'), ('TND', 'Tunisia Dinars – TND'), ('TRY', 'Turkey New Lira – TRY'), ('AED', 'United Arab Emirates Dirhams – AED'), ('GBP', 'United Kingdom Pounds – GBP'), ('USD', 'United States Dollars – USD'), ('VEB', 'Venezuela Bolivares – VEB'), ('VND', 'Vietnam Dong – VND'), ('ZMK', 'Zambia Kwacha – ZMK')], max_length=97)),
                ('total_quantity', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('average_buy_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('total_invested', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('current_value', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('profit_loss', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('profit_loss_percentage', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio',
                'ordering': ['user'],
                'unique_together': {('user', 'cryptocurrency')},
            },
        ),
    ]
