# Generated by Django 5.2.7 on 2025-10-14 16:01

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('venex_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('symbol', models.CharField(max_length=10, unique=True, verbose_name='Symbol')),
                ('name', models.CharField(max_length=100, verbose_name='Cryptocurrency Name')),
                ('current_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Current Price (USD)')),
                ('price_change_24h', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='24h Price Change')),
                ('price_change_percentage_24h', models.DecimalField(decimal_places=4, default=0.0, max_digits=10, verbose_name='24h Price Change %')),
                ('market_cap', models.DecimalField(decimal_places=2, default=0.0, max_digits=30, verbose_name='Market Cap')),
                ('volume_24h', models.DecimalField(decimal_places=2, default=0.0, max_digits=30, verbose_name='24h Volume')),
                ('circulating_supply', models.DecimalField(decimal_places=2, default=0.0, max_digits=30, verbose_name='Circulating Supply')),
                ('total_supply', models.DecimalField(decimal_places=2, default=0.0, max_digits=30, verbose_name='Total Supply')),
                ('max_supply', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True, verbose_name='Max Supply')),
                ('rank', models.IntegerField(default=0, verbose_name='Market Cap Rank')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
            ],
            options={
                'verbose_name': 'Cryptocurrency',
                'verbose_name_plural': 'Cryptocurrencies',
                'db_table': 'cryptocurrencies',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_type', models.CharField(choices=[('MARKET', 'Market Order'), ('LIMIT', 'Limit Order'), ('STOP_LOSS', 'Stop Loss'), ('TAKE_PROFIT', 'Take Profit')], max_length=20, verbose_name='Order Type')),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10, verbose_name='Side')),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10, verbose_name='Cryptocurrency')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(1e-08)], verbose_name='Quantity')),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('stop_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stop Price')),
                ('filled_quantity', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Filled Quantity')),
                ('average_filled_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Average Filled Price')),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('FILLED', 'Filled'), ('CANCELLED', 'Cancelled'), ('PARTIALLY_FILLED', 'Partially Filled'), ('EXPIRED', 'Expired')], default='OPEN', max_length=20, verbose_name='Status')),
                ('time_in_force', models.CharField(choices=[('GTC', 'Good Till Cancelled'), ('IOC', 'Immediate or Cancel'), ('FOK', 'Fill or Kill')], default='GTC', max_length=20, verbose_name='Time in Force')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('filled_at', models.DateTimeField(blank=True, null=True, verbose_name='Filled At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='orders_user_id_17dbdf_idx'), models.Index(fields=['cryptocurrency', 'order_type'], name='orders_cryptoc_f92f30_idx')],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10, verbose_name='Cryptocurrency')),
                ('total_quantity', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Total Quantity')),
                ('average_buy_price', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Average Buy Price')),
                ('total_invested', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Total Invested')),
                ('current_value', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Current Value')),
                ('profit_loss', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Profit/Loss')),
                ('profit_loss_percentage', models.DecimalField(decimal_places=4, default=0.0, max_digits=10, verbose_name='Profit/Loss %')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
                'db_table': 'portfolio',
                'indexes': [models.Index(fields=['user', 'cryptocurrency'], name='portfolio_user_id_8864dd_idx')],
                'unique_together': {('user', 'cryptocurrency')},
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20, verbose_name='Price')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Volume')),
                ('market_cap', models.DecimalField(decimal_places=2, default=0.0, max_digits=30, verbose_name='Market Cap')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='venex_app.cryptocurrency')),
            ],
            options={
                'verbose_name': 'Price History',
                'verbose_name_plural': 'Price Histories',
                'db_table': 'price_history',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['cryptocurrency', 'timestamp'], name='price_histo_cryptoc_0129a2_idx'), models.Index(fields=['timestamp'], name='price_histo_timesta_8cf394_idx')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal'), ('TRANSFER', 'Transfer')], max_length=20, verbose_name='Transaction Type')),
                ('cryptocurrency', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether'), ('LTC', 'Litecoin'), ('TRX', 'Tron')], max_length=10, verbose_name='Cryptocurrency')),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price Per Unit')),
                ('total_amount', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Amount')),
                ('fiat_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fiat Amount')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('PROCESSING', 'Processing')], default='PENDING', max_length=20, verbose_name='Status')),
                ('transaction_hash', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction Hash')),
                ('wallet_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Wallet Address')),
                ('network_fee', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Network Fee')),
                ('platform_fee', models.DecimalField(decimal_places=8, default=0.0, max_digits=20, verbose_name='Platform Fee')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='transaction_user_id_294647_idx'), models.Index(fields=['transaction_type', 'status'], name='transaction_transac_9f5934_idx'), models.Index(fields=['cryptocurrency', 'created_at'], name='transaction_cryptoc_e3f90f_idx')],
            },
        ),
    ]
